"""
Задача создать класс для представления длины.

Создайте специализированное исключение, которое этот модуль может вызвать при ошибке.

Для этого необходимо определить конструктор __init __ (), который принимает число,
предполагается, что в метрах

Реализуйте __str__, чтобы дать строковое представление, используемое str () и print

Реализуйте функцию convert (string), которая возвращает значение, преобразованное в см, мм, дюймы

Реализуйте функцию, чтобы сложить два класса вместе и вернуть сумму как класс

*Измените конструктор, чтобы он мог принимать число и строку, например:
l = Length(21.2, "inch")

*Измените функцию, которая добавляет два класса вместе, чтобы сделать ее более гибкой,
чтобы она могла добавлять число к классу Length, возвращая класс Length.
Пример:
l = Length(23)
m = l + 21
"""


# Создайте специальное исключение ExceptionLength, которое можно использовать при ошибке.

# Заполните функции, которые нужны для длины.
class Length(object):
    """Класс, который представляет длину. Конструктор принимает число, представляющее метры."""

    def __init__(self, theValue):
        pass

    def __str__(self):
        pass

    def convert(self, uom):
        """Возвращает значение в указанных единицах измерения."""
        pass

    # Создайте соответствующую функцию, чтобы добавить два класса длины вместе
