"""
Найти дубликаты файлов в файловой системе.

Напишите функцию duplicate_files (), которая принимает
один аргумент пути к каталогу (в виде строки)
и возвращает список списков повторяющихся путей к файлам.

Пример:

>>> duplicate_files('foo/bar')
[
    ['foo/bar/picture_1.jpg', 'foo/bar/picture_1_copy.jpg'],
    ['foo/bar/readme.txt', 'foo/bar/readme1.txt', 'foo/bar/readme2.txt'],
]

СОВЕТ: Используйте os.walk для обхода дерева каталогов.
СОВЕТ: Используйте hashlib для создания хеш-функции каждого файла.
Если хеш-код одинаков, файлы имеют небольшую степень неопределенности.

ДОПОЛНИТЕЛЬНО: Не изменяйте код, чтобы он смотрел только на файлы, указанные пользователем.
Например duplicate_files ('foo/bar', '*.py')

СОВЕТ: Посмотрите на модули glob и fnmatch

ДОПОЛНИТЕЛЬНО: Сделайте его полноценным инструментом командной строки,
позволив пользователю указать параметры командной строки. Пример из командной строки:
$ python DuplicateFiles.py --match="*.py" foo/bar

СОВЕТ: посмотрите модуль argparse для определения и обработки аргументов командной строки.
"""


def duplicate_files(path):
    pass
